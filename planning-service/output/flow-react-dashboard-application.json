{
  "id": "a0c8c1ed-352a-4757-b601-f1eea8c9bc90",
  "version": 1,
  "name": "React web project",
  "description": "Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.",
  "created": "2025-08-26T17:22:41.537Z",
  "modified": "2025-08-26T17:22:41.537Z",
  "nodes": [
    {
      "id": "node-1",
      "agentId": "vite-react-setup",
      "label": "Vite React Setup",
      "category": "setup",
      "instructions": "Execute vite-react-setup agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {
        "projectName": "develop-a-react",
        "features": [
          "authentication",
          "database",
          "api",
          "testing",
          "performance"
        ],
        "database": "postgres",
        "authentication": "nextauth",
        "testing": true
      },
      "position": {
        "x": -32.41711221894343,
        "y": -13.75
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 600,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 10
    },
    {
      "id": "node-2",
      "agentId": "react-developer",
      "label": "React Developer",
      "category": "execution",
      "instructions": "Execute react-developer agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {
        "features": [
          "authentication",
          "database",
          "api",
          "testing",
          "performance"
        ],
        "technology": {
          "frontend": [
            "react"
          ],
          "testing": [
            "playwright",
            "cypress"
          ],
          "backend": [
            "nodejs"
          ],
          "database": [
            "postgres"
          ]
        }
      },
      "position": {
        "x": 358.06111479524225,
        "y": -143.8539695739746
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 30
    },
    {
      "id": "node-3",
      "agentId": "nodejs-backend",
      "label": "Nodejs Backend",
      "category": "execution",
      "instructions": "Execute nodejs-backend agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 333.1982490460008,
        "y": 188.671875
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 15
    },
    {
      "id": "node-4",
      "agentId": "database-developer",
      "label": "Database Developer",
      "category": "execution",
      "instructions": "Execute database-developer agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {
        "features": [
          "authentication",
          "database",
          "api",
          "testing",
          "performance"
        ],
        "technology": {
          "frontend": [
            "react"
          ],
          "testing": [
            "playwright",
            "cypress"
          ],
          "backend": [
            "nodejs"
          ],
          "database": [
            "postgres"
          ]
        }
      },
      "position": {
        "x": 336.56596461247295,
        "y": 527.4609375
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 30
    },
    {
      "id": "node-5",
      "agentId": "api-developer",
      "label": "Api Developer",
      "category": "execution",
      "instructions": "Execute api-developer agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {
        "features": [
          "authentication",
          "database",
          "api",
          "testing",
          "performance"
        ],
        "technology": {
          "frontend": [
            "react"
          ],
          "testing": [
            "playwright",
            "cypress"
          ],
          "backend": [
            "nodejs"
          ],
          "database": [
            "postgres"
          ]
        }
      },
      "position": {
        "x": 346.92894324454625,
        "y": 846.25
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 30
    },
    {
      "id": "node-6",
      "agentId": "jest-tester",
      "label": "Jest Tester",
      "category": "testing",
      "instructions": "Execute jest-tester agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {
        "testingLevel": "basic",
        "coverage": 60
      },
      "position": {
        "x": 688.0609908610094,
        "y": 26.145734786987305
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 15
    },
    {
      "id": "node-7",
      "agentId": "playwright-e2e",
      "label": "Playwright E2e",
      "category": "testing",
      "instructions": "Execute playwright-e2e agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 666.565964612473,
        "y": 357.4609375
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 900,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 20
    },
    {
      "id": "node-8",
      "agentId": "k6-performance",
      "label": "K6 Performance",
      "category": "testing",
      "instructions": "Execute k6-performance agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": -32.41711221894343,
        "y": 306.25
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 1200,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 25
    },
    {
      "id": "node-9",
      "agentId": "git-merger",
      "label": "Git Merger",
      "category": "integration",
      "instructions": "Execute git-merger agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 967.9764369964639,
        "y": -166.25
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 5
    },
    {
      "id": "node-10",
      "agentId": "api-integrator",
      "label": "Api Integrator",
      "category": "integration",
      "instructions": "Execute api-integrator agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 1018.0609908610093,
        "y": 196.1457347869873
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 15
    },
    {
      "id": "node-11",
      "agentId": "db-migrator",
      "label": "Db Migrator",
      "category": "integration",
      "instructions": "Execute db-migrator agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 969.0603933552807,
        "y": 527.96875
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 10
    },
    {
      "id": "node-12",
      "agentId": "security-review",
      "label": "Security Review",
      "category": "review",
      "instructions": "Execute security-review agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 1305.9062657710303,
        "y": 2.5
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 10
    },
    {
      "id": "node-13",
      "agentId": "summarizer",
      "label": "Summarizer",
      "category": "utility",
      "instructions": "Execute summarizer agent for project: Develop a React admin dashboard with data visualization, user management, real-time updates via WebSocket, REST API integration, and Cypress e2e testing. Focus on responsive design and performance optimization.\n\nTechnology stack: {\"frontend\":[\"react\"],\"testing\":[\"playwright\",\"cypress\"],\"backend\":[\"nodejs\"],\"database\":[\"postgres\"]}\nRequired features: authentication, database, api, testing, performance\nPreferences: {}",
      "inputs": {},
      "position": {
        "x": 1352.4171122189434,
        "y": 306.25
      },
      "config": {
        "retryOnFailure": true,
        "maxRetries": 3,
        "timeout": 300,
        "requiresReview": false
      },
      "status": "pending",
      "estimatedTime": 5
    }
  ],
  "edges": [
    {
      "id": "edge-1",
      "source": "node-1",
      "target": "node-2",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-2",
      "source": "node-1",
      "target": "node-3",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-3",
      "source": "node-1",
      "target": "node-4",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-4",
      "source": "node-1",
      "target": "node-5",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-5",
      "source": "node-2",
      "target": "node-6",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-6",
      "source": "node-2",
      "target": "node-7",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-7",
      "source": "node-3",
      "target": "node-6",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-8",
      "source": "node-3",
      "target": "node-7",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-9",
      "source": "node-4",
      "target": "node-7",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-10",
      "source": "node-5",
      "target": "node-7",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-11",
      "source": "node-6",
      "target": "node-9",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-12",
      "source": "node-6",
      "target": "node-10",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-13",
      "source": "node-6",
      "target": "node-11",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-14",
      "source": "node-7",
      "target": "node-9",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-15",
      "source": "node-7",
      "target": "node-10",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-16",
      "source": "node-7",
      "target": "node-11",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-17",
      "source": "node-8",
      "target": "node-9",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-18",
      "source": "node-8",
      "target": "node-10",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-19",
      "source": "node-8",
      "target": "node-11",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-20",
      "source": "node-9",
      "target": "node-12",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-21",
      "source": "node-9",
      "target": "node-13",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-22",
      "source": "node-10",
      "target": "node-12",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-23",
      "source": "node-10",
      "target": "node-13",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-24",
      "source": "node-11",
      "target": "node-12",
      "condition": {
        "type": "success"
      }
    },
    {
      "id": "edge-25",
      "source": "node-11",
      "target": "node-13",
      "condition": {
        "type": "success"
      }
    }
  ],
  "metadata": {
    "projectType": "web",
    "estimatedTotalTime": 95,
    "estimatedTotalTokens": 650000,
    "environment": {
      "NODE_ENV": "development",
      "PROJECT_TYPE": "web",
      "DATABASE_URL": "postgresql://user:password@localhost:5432/dbname",
      "AUTH_SECRET": "development-secret",
      "NEXTAUTH_URL": "http://localhost:3000"
    },
    "secrets": [
      "AUTH_SECRET",
      "JWT_SECRET",
      "DATABASE_URL",
      "DB_PASSWORD",
      "API_KEY",
      "API_SECRET"
    ]
  }
}