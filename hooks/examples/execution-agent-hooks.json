{
  "name": "Execution Agent Hook Configuration",
  "description": "Hook configuration for code execution agents (React, Vue, Node.js developers, etc.)",
  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo $(date +%s) > $CLAUDE_PROJECT_DIR/.start_time"
          },
          {
            "type": "command",
            "command": "echo '[]' > $CLAUDE_PROJECT_DIR/.modified_files.json"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --exit-code $EXIT_CODE --session-id $SESSION_ID",
            "timeout": 30000,
            "retryOnFailure": true
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --file $FILE_PATH --session-id $SESSION_ID",
            "continueOnError": true
          },
          {
            "type": "command",
            "command": "echo $FILE_PATH >> $CLAUDE_PROJECT_DIR/.modified_files.txt",
            "continueOnError": true
          }
        ]
      },
      {
        "matcher": "Read",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Read: $FILE_PATH\" >> $CLAUDE_PROJECT_DIR/access.log",
            "continueOnError": true
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Saving work before context reset\" && cp -r $CLAUDE_PROJECT_DIR $CLAUDE_PROJECT_DIR.backup.$(date +%s)",
            "continueOnError": true
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/subagent-complete.sh --parent $NODE_ID --subagent-id $SUBAGENT_ID --status $STATUS --session-id $SESSION_ID",
            "timeout": 30000
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "curl -s -X POST -H 'Content-Type: application/json' -d '{\"nodeId\": \"$NODE_ID\", \"type\": \"progress\", \"message\": \"$MESSAGE\"}' http://localhost:3002/api/hooks/notification",
            "continueOnError": true
          }
        ]
      }
    ]
  },
  "environment": {
    "ORCHESTRATOR_URL": "http://localhost:3002",
    "PREVIEW_URL": "http://localhost:3003",
    "ENABLE_HOT_RELOAD": "true",
    "TRACK_FILE_CHANGES": "true",
    "MAX_RETRIES": "3"
  },
  "security": {
    "allowedCommands": [
      "stop.sh",
      "track-changes.sh",
      "subagent-complete.sh",
      "echo",
      "curl",
      "cp",
      "date"
    ],
    "maxExecutionTime": 30000,
    "sandboxed": true,
    "fileSystemRestrictions": {
      "readOnly": false,
      "allowedPaths": ["$CLAUDE_PROJECT_DIR"],
      "blockedPaths": ["/etc", "/usr", "/bin", "/sbin"]
    }
  }
}