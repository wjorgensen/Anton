{
  "timestamp": "2025-08-27T12:04:10.422Z",
  "dockerDeployment": {
    "status": "passed",
    "details": {
      "dockerfilesExist": {
        "Dockerfile.frontend": false,
        "Dockerfile.orchestrator": false,
        "Dockerfile.planning": false
      },
      "composeFilesExist": {
        "docker-compose.yml": true,
        "docker-compose.prod.yml": true
      },
      "composeValid": true
    },
    "errors": []
  },
  "securityTests": {
    "status": "passed",
    "configurationChecks": {
      "securityFiles": {
        ".env.example": true,
        ".env": false,
        ".gitignore": true
      },
      "envIgnored": true,
      "securityPackages": {
        "helmet": true,
        "cors": true,
        "bcrypt": true,
        "jsonwebtoken": true,
        "rateLimiter": true
      },
      "authMiddleware": {
        "authFile": true,
        "rateLimitFile": true,
        "validationFile": false
      },
      "requiredEnvVars": {
        "jwtSecret": true,
        "databaseUrl": true,
        "redisUrl": true,
        "apiKeys": true
      }
    },
    "errors": []
  },
  "monitoringTests": {
    "status": "passed",
    "healthEndpoints": {
      "orchestrator": {
        "status": "healthy",
        "data": {
          "status": "healthy",
          "timestamp": "2025-08-27T12:04:18.074Z",
          "stats": {
            "hooks": {
              "activeFlows": 0,
              "totalNodes": 0,
              "hookEvents": 0
            },
            "websocket": {
              "connectedClients": 0,
              "activeFlows": 0,
              "activeNodes": 0,
              "totalSubscriptions": 0
            },
            "errors": {
              "totalErrors": 0,
              "byCode": {},
              "recoverableRate": 0,
              "recentErrors": []
            }
          }
        }
      },
      "frontend": {
        "status": "healthy",
        "data": {
          "status": "ok",
          "service": "anton-visual-editor",
          "timestamp": "2025-08-27T12:04:18.063Z",
          "version": "1.0.0",
          "environment": "development"
        }
      }
    },
    "metrics": {
      "hasMetricsFiles": true,
      "dependencies": {
        "prometheus": true,
        "sentry": true,
        "winston": true
      },
      "orchestrator": {
        "available": false
      }
    },
    "errors": [],
    "monitoringInfrastructure": {
      "monitoringDir": true,
      "prometheusConfig": true,
      "grafanaConfig": true
    },
    "logging": {
      "winstonLogger": true,
      "structuredLogging": true,
      "logLevels": true,
      "fileTransport": true
    }
  },
  "deploymentTests": {
    "status": "passed",
    "configurationValidation": {
      "deploymentScripts": {
        "hasBuildScript": true,
        "hasStartScript": false,
        "hasDockerScripts": true,
        "hasTestScripts": true
      },
      "cicd": {
        ".github/workflows": false,
        ".gitlab-ci.yml": false,
        "Jenkinsfile": false,
        ".circleci/config.yml": false
      },
      "databaseMigrations": true,
      "backupConfiguration": false,
      "nginx": {
        "exists": true,
        "hasSSLConfig": true,
        "hasRateLimiting": true,
        "hasGzip": true,
        "hasUpstreams": true
      }
    },
    "errors": []
  },
  "codeQuality": {
    "status": "passed",
    "checks": {
      "lintingConfig": {
        ".eslintrc.js": false,
        ".eslintrc.json": false,
        ".prettierrc": false,
        "tsconfig.json": true
      },
      "testDirectories": true,
      "documentation": {
        "README": false,
        "API_DOCS": false,
        "CONTRIBUTING": false
      },
      "errorHandling": "good"
    },
    "errors": []
  },
  "summary": {
    "totalTests": 5,
    "passed": 5,
    "failed": 0,
    "warnings": 0
  },
  "productionReadinessScore": {
    "score": 29,
    "maxScore": 40,
    "percentage": 73,
    "grade": "C",
    "recommendation": "Requires improvements before production"
  },
  "keyFindings": {
    "strengths": [
      "Security headers configured with Helmet",
      "Structured logging with Winston",
      "Production Docker configuration exists"
    ],
    "weaknesses": [
      "No CI/CD configuration found",
      "No backup configuration found"
    ],
    "criticalIssues": []
  }
}