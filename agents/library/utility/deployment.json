{
  "id": "deployment",
  "name": "Deployment and Release Management Agent",
  "category": "utility",
  "type": "deployment",
  "version": "1.0.0",
  "description": "Specialized agent for deployment orchestration, release management, environment provisioning, and post-deployment monitoring",
  "icon": "rocket-launch",
  "color": "#10B981",
  "instructions": {
    "base": "You are a deployment and release management expert. Your role is to orchestrate deployments, manage releases, provision environments, handle rollbacks, and monitor deployment health across different platforms and environments.",
    "contextual": "Deploy to: {{targetEnvironment}}. Application: {{applicationName}}. Strategy: {{deploymentStrategy}}. Version: {{releaseVersion}}. Rollback plan: {{rollbackEnabled}}."
  },
  "claudeMD": "# Deployment and Release Management Agent\n\nExpert in deployment orchestration and release management:\n- Multi-environment deployments\n- Blue-green deployment strategies\n- Canary releases\n- Infrastructure provisioning\n- Container orchestration\n- Service mesh management\n- Monitoring and alerting\n- Rollback procedures\n\n## Core Competencies\n- Cloud platform deployment (AWS, GCP, Azure)\n- Container deployment (Docker, Kubernetes)\n- Serverless deployments\n- Database migrations\n- Configuration management\n- Health checks and monitoring\n- Automated rollbacks\n- Release versioning\n\n## Deployment Standards\n- Zero-downtime deployments\n- Environment parity maintenance\n- Security best practices\n- Monitoring and observability\n- Disaster recovery planning\n- Compliance requirements",
  "inputs": [
    {
      "name": "targetEnvironment",
      "type": "string",
      "required": true,
      "description": "Target deployment environment (development, staging, production, custom)"
    },
    {
      "name": "applicationName",
      "type": "string",
      "required": true,
      "description": "Name of the application to deploy"
    },
    {
      "name": "deploymentStrategy",
      "type": "string",
      "required": false,
      "description": "Deployment strategy (rolling, blue-green, canary, recreate)",
      "default": "rolling"
    },
    {
      "name": "releaseVersion",
      "type": "string",
      "required": false,
      "description": "Version to deploy (latest, specific version, branch)",
      "default": "latest"
    },
    {
      "name": "rollbackEnabled",
      "type": "boolean",
      "required": false,
      "description": "Enable automatic rollback on deployment failure",
      "default": true
    },
    {
      "name": "healthChecks",
      "type": "array",
      "required": false,
      "description": "Health checks to perform post-deployment",
      "default": ["http", "database", "dependencies"]
    },
    {
      "name": "notificationChannels",
      "type": "array",
      "required": false,
      "description": "Channels for deployment notifications"
    }
  ],
  "outputs": [
    {
      "name": "deploymentStatus",
      "type": "object",
      "description": "Overall deployment status and results"
    },
    {
      "name": "environmentInfo",
      "type": "object",
      "description": "Target environment details and endpoints"
    },
    {
      "name": "healthCheckResults",
      "type": "array",
      "description": "Results from post-deployment health checks"
    },
    {
      "name": "rollbackPlan",
      "type": "object",
      "description": "Rollback procedures and previous version info"
    },
    {
      "name": "monitoringLinks",
      "type": "array",
      "description": "Links to monitoring and logging dashboards"
    },
    {
      "name": "releaseNotes",
      "type": "string",
      "description": "Generated release notes for deployment"
    }
  ],
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --output-type utility"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/monitor-deployment.sh --node-id $NODE_ID --environment $TARGET_ENVIRONMENT --app $APPLICATION_NAME"
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --category utility"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/init-deployment.sh --node-id $NODE_ID --environment $TARGET_ENVIRONMENT"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/save-deployment-state.sh --node-id $NODE_ID --context-reset true"
          }
        ]
      }
    ]
  },
  "resources": {
    "estimatedTime": 35,
    "estimatedTokens": 85000,
    "requiresGPU": false,
    "maxRetries": 3,
    "memory": "4GB",
    "cpu": "4 cores"
  },
  "dependencies": ["docker-builder", "ci-cd-runner"],
  "tags": ["deployment", "release-management", "devops", "infrastructure", "monitoring", "rollback", "utility", "automation"]
}