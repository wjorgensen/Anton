{
  "id": "websocket-developer",
  "name": "WebSocket Developer Agent",
  "category": "execution",
  "type": "websocket-developer",
  "version": "1.0.0",
  "description": "Specialized agent for developing WebSocket real-time features, chat systems, live updates, and bidirectional communication with modern patterns",
  "icon": "websocket",
  "color": "#FF6B6B",
  "instructions": {
    "base": "You are an expert WebSocket developer. Your role is to implement real-time communication features, chat systems, live updates, and bidirectional data flow using WebSockets, Socket.IO, and modern real-time patterns. You build scalable and performant real-time applications.",
    "contextual": "Implement the following WebSocket feature: {{featureDescription}}. Requirements: {{requirements}}. Technology: {{technology}}. Use efficient event handling and connection management."
  },
  "claudeMD": "# WebSocket Developer Agent\n\nExpert in WebSocket development with:\n- Socket.IO real-time communication\n- Native WebSocket implementation\n- Real-time chat systems\n- Live data synchronization\n- Event-driven architecture\n- Connection pooling and scaling\n- Room and namespace management\n- Error handling and reconnection\n\n## Core Competencies\n- WebSocket connection management\n- Real-time event handling\n- Broadcasting and multicasting\n- Authentication and authorization\n- Rate limiting and throttling\n- Message queuing patterns\n- Horizontal scaling strategies\n- Client-side real-time integration\n\n## Development Standards\n- Implement proper connection lifecycle\n- Handle disconnections gracefully\n- Use efficient event patterns\n- Implement rate limiting\n- Write real-time tests\n- Monitor connection health",
  "inputs": [
    {
      "name": "featureDescription",
      "type": "string",
      "required": true,
      "description": "Description of the WebSocket feature to implement"
    },
    {
      "name": "requirements",
      "type": "array",
      "required": true,
      "description": "List of specific requirements for the feature"
    },
    {
      "name": "technology",
      "type": "string",
      "required": false,
      "description": "WebSocket technology (socket.io, ws, uws, native)",
      "default": "socket.io"
    },
    {
      "name": "framework",
      "type": "string",
      "required": false,
      "description": "Backend framework (express, fastify, nextjs, django)",
      "default": "express"
    },
    {
      "name": "authentication",
      "type": "boolean",
      "required": false,
      "description": "Whether to implement authentication",
      "default": true
    },
    {
      "name": "targetFiles",
      "type": "array",
      "required": false,
      "description": "Specific files to modify or create"
    }
  ],
  "outputs": [
    {
      "name": "implementedFiles",
      "type": "array",
      "description": "List of files created or modified"
    },
    {
      "name": "socketHandlers",
      "type": "array",
      "description": "WebSocket event handlers implemented"
    },
    {
      "name": "clientIntegration",
      "type": "array",
      "description": "Client-side integration files"
    },
    {
      "name": "middleware",
      "type": "array",
      "description": "WebSocket middleware implemented"
    },
    {
      "name": "tests",
      "type": "array",
      "description": "Real-time test files created"
    },
    {
      "name": "documentation",
      "type": "string",
      "description": "Documentation of implemented features"
    }
  ],
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --output-type execution"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --category execution"
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/sync-preview.sh --node-id $NODE_ID --file $FILE_PATH"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/monitor-execution.sh --node-id $NODE_ID --command $COMMAND"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/save-work.sh --node-id $NODE_ID --context-reset true"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/handle-notification.sh --node-id $NODE_ID --type execution"
          }
        ]
      }
    ]
  },
  "resources": {
    "estimatedTime": 30,
    "estimatedTokens": 110000,
    "requiresGPU": false,
    "maxRetries": 3,
    "memory": "4GB",
    "cpu": "2 cores"
  },
  "dependencies": ["socketio-setup", "websocket-setup", "redis-setup"],
  "tags": ["websocket", "real-time", "socket.io", "chat", "live-updates", "bidirectional", "events", "development"]
}