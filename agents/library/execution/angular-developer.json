{
  "id": "angular-developer",
  "name": "Angular Developer Agent",
  "category": "execution",
  "type": "angular-developer",
  "version": "1.0.0",
  "description": "Specialized agent for developing Angular components, services, and applications with modern Angular patterns, RxJS, and best practices",
  "icon": "angular",
  "color": "#DD0031",
  "instructions": {
    "base": "You are an expert Angular developer. Your role is to implement Angular components, services, and business logic using modern Angular patterns, RxJS, dependency injection, and best practices. You write clean, maintainable, and testable code.",
    "contextual": "Implement the following Angular feature: {{featureDescription}}. Requirements: {{requirements}}. UI Library: {{uiLibrary}}. Use standalone components and modern Angular patterns."
  },
  "claudeMD": "# Angular Developer Agent\n\nExpert in Angular development with:\n- Angular 17+ features (Standalone components, Signals)\n- RxJS reactive programming\n- Dependency injection system\n- Angular CLI and schematics\n- TypeScript strict mode\n- Testing with Jasmine/Karma\n- Angular Material integration\n- Performance optimization\n\n## Core Competencies\n- Component architecture and lifecycle\n- Service and dependency injection\n- Reactive forms and validation\n- HTTP client and interceptors\n- Router and navigation guards\n- State management with NgRx\n- Custom pipes and directives\n- Lazy loading and code splitting\n\n## Development Standards\n- Use standalone components\n- Implement OnPush change detection\n- Follow Angular style guide\n- Write unit and integration tests\n- Use strict TypeScript configuration\n- Document components and services",
  "inputs": [
    {
      "name": "featureDescription",
      "type": "string",
      "required": true,
      "description": "Description of the Angular feature to implement"
    },
    {
      "name": "requirements",
      "type": "array",
      "required": true,
      "description": "List of specific requirements for the feature"
    },
    {
      "name": "uiLibrary",
      "type": "string",
      "required": false,
      "description": "UI library being used (material, ng-bootstrap, primeng, custom)",
      "default": "material"
    },
    {
      "name": "targetFiles",
      "type": "array",
      "required": false,
      "description": "Specific files to modify or create"
    },
    {
      "name": "dependencies",
      "type": "object",
      "required": false,
      "description": "External dependencies needed for the feature"
    }
  ],
  "outputs": [
    {
      "name": "implementedFiles",
      "type": "array",
      "description": "List of files created or modified"
    },
    {
      "name": "components",
      "type": "array",
      "description": "List of Angular components created"
    },
    {
      "name": "services",
      "type": "array",
      "description": "Angular services developed"
    },
    {
      "name": "pipes",
      "type": "array",
      "description": "Custom pipes created"
    },
    {
      "name": "tests",
      "type": "array",
      "description": "Test files created"
    },
    {
      "name": "documentation",
      "type": "string",
      "description": "Documentation of implemented features"
    }
  ],
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --output-type execution"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --category execution"
          },
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/sync-preview.sh --node-id $NODE_ID --file $FILE_PATH"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/monitor-execution.sh --node-id $NODE_ID --command $COMMAND"
          }
        ]
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/save-work.sh --node-id $NODE_ID --context-reset true"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/handle-notification.sh --node-id $NODE_ID --type execution"
          }
        ]
      }
    ]
  },
  "resources": {
    "estimatedTime": 35,
    "estimatedTokens": 115000,
    "requiresGPU": false,
    "maxRetries": 3,
    "memory": "4GB",
    "cpu": "2 cores"
  },
  "dependencies": ["angular-setup", "angular-cli-setup"],
  "tags": ["angular", "frontend", "typescript", "rxjs", "components", "services", "ui", "development"]
}