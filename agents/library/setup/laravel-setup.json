{
  "id": "laravel-setup",
  "name": "Laravel Setup Agent",
  "category": "setup",
  "type": "laravel-setup",
  "version": "1.0.0",
  "description": "Specialized agent for setting up Laravel applications with Eloquent ORM, Blade templates, authentication, and modern PHP development patterns",
  "icon": "laravel",
  "color": "#FF2D20",
  "instructions": {
    "base": "You are a Laravel framework specialist. Your role is to create elegant PHP applications using Laravel, featuring Eloquent ORM, Blade templating, Artisan CLI, and modern PHP development practices with MVC architecture.",
    "contextual": "Set up a Laravel project: {{projectName}} with database: {{database}}, authentication: {{authentication}}, features: {{features}}, and frontend: {{frontend}}. Configure for modern PHP development."
  },
  "claudeMD": "# Laravel Setup Agent\n\nThis agent specializes in creating Laravel applications with:\n- Laravel 10.x with PHP 8.1+\n- Eloquent ORM for database operations\n- Blade templating engine\n- Laravel Breeze/Jetstream authentication\n- Composer dependency management\n- Artisan CLI commands\n- Laravel Mix/Vite for asset compilation\n- Queue and job processing\n\n## Core Competencies\n- MVC architecture setup\n- Database migrations and models\n- Route and controller organization\n- Middleware and service providers\n- Form validation and requests\n- API resource development\n- Testing with PHPUnit\n- Package integration\n\n## Output Standards\n- Clean MVC architecture\n- Comprehensive documentation\n- Database seeders and factories\n- Production-ready configuration\n- Security best practices",
  "inputs": [
    {
      "name": "projectName",
      "type": "string",
      "required": true,
      "description": "Name of the Laravel project to create"
    },
    {
      "name": "database",
      "type": "string",
      "required": false,
      "description": "Database to configure (mysql, postgresql, sqlite, mongodb)",
      "default": "mysql"
    },
    {
      "name": "authentication",
      "type": "string",
      "required": false,
      "description": "Authentication scaffolding (breeze, jetstream, sanctum, none)",
      "default": "breeze"
    },
    {
      "name": "features",
      "type": "array",
      "required": false,
      "description": "Features to include (e.g., api, queues, broadcasting, horizon)",
      "default": ["eloquent", "blade", "validation"]
    },
    {
      "name": "frontend",
      "type": "string",
      "required": false,
      "description": "Frontend stack (blade, vue, react, inertia)",
      "default": "blade"
    },
    {
      "name": "testing",
      "type": "boolean",
      "required": false,
      "description": "Include comprehensive testing setup",
      "default": true
    },
    {
      "name": "apiOnly",
      "type": "boolean",
      "required": false,
      "description": "Create API-only application",
      "default": false
    }
  ],
  "outputs": [
    {
      "name": "projectPath",
      "type": "string",
      "description": "Path to the created Laravel project"
    },
    {
      "name": "models",
      "type": "array",
      "description": "Eloquent models and their configurations"
    },
    {
      "name": "controllers",
      "type": "array",
      "description": "Controllers and their route mappings"
    },
    {
      "name": "migrations",
      "type": "array",
      "description": "Database migrations and schema"
    },
    {
      "name": "routes",
      "type": "object",
      "description": "Application routes configuration"
    },
    {
      "name": "configuration",
      "type": "object",
      "description": "Environment and application configuration"
    }
  ],
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --output-type setup"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --category setup"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/monitor-install.sh --node-id $NODE_ID --category setup"
          }
        ]
      }
    ]
  },
  "resources": {
    "estimatedTime": 15,
    "estimatedTokens": 60000,
    "requiresGPU": false,
    "maxRetries": 3,
    "memory": "2GB",
    "cpu": "2 cores"
  },
  "dependencies": [],
  "tags": ["laravel", "php", "eloquent", "blade", "mvc", "artisan", "composer", "backend", "setup", "framework"]
}