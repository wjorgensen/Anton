{
  "id": "spring-boot-setup",
  "name": "Spring Boot Setup Agent",
  "category": "setup",
  "type": "spring-boot-setup",
  "version": "1.0.0",
  "description": "Specialized agent for setting up Spring Boot applications with JPA, REST API, security, and enterprise Java development patterns",
  "icon": "spring",
  "color": "#6DB33F",
  "instructions": {
    "base": "You are a Spring Boot specialist. Your role is to create robust Java applications using Spring Boot framework, featuring dependency injection, JPA data access, REST APIs, security, and enterprise-grade Java development patterns.",
    "contextual": "Set up a Spring Boot project: {{projectName}} with Java version: {{javaVersion}}, database: {{database}}, security: {{security}}, and features: {{features}}. Configure for enterprise deployment."
  },
  "claudeMD": "# Spring Boot Setup Agent\n\nThis agent specializes in creating Spring Boot applications with:\n- Spring Boot 3.x with Java 17+\n- Spring Data JPA for database operations\n- Spring Security for authentication\n- Spring Web for REST APIs\n- Maven or Gradle build tools\n- H2/PostgreSQL/MySQL database\n- Swagger/OpenAPI documentation\n- Docker containerization\n\n## Core Competencies\n- Project structure with Maven/Gradle\n- Entity and repository design\n- RESTful API development\n- Security configuration\n- Database migrations\n- Exception handling\n- Testing with JUnit 5\n- Production deployment\n\n## Output Standards\n- Clean layered architecture\n- Comprehensive documentation\n- Unit and integration tests\n- Production-ready configuration\n- Security best practices",
  "inputs": [
    {
      "name": "projectName",
      "type": "string",
      "required": true,
      "description": "Name of the Spring Boot project to create"
    },
    {
      "name": "javaVersion",
      "type": "string",
      "required": false,
      "description": "Java version to use (17, 21)",
      "default": "17"
    },
    {
      "name": "buildTool",
      "type": "string",
      "required": false,
      "description": "Build tool to use (maven, gradle)",
      "default": "maven"
    },
    {
      "name": "database",
      "type": "string",
      "required": false,
      "description": "Database to configure (postgresql, mysql, h2, mongodb)",
      "default": "postgresql"
    },
    {
      "name": "security",
      "type": "boolean",
      "required": false,
      "description": "Include Spring Security configuration",
      "default": true
    },
    {
      "name": "features",
      "type": "array",
      "required": false,
      "description": "Features to include (e.g., web, jpa, security, validation)",
      "default": ["web", "jpa", "security", "validation"]
    },
    {
      "name": "testing",
      "type": "boolean",
      "required": false,
      "description": "Include comprehensive testing setup",
      "default": true
    }
  ],
  "outputs": [
    {
      "name": "projectPath",
      "type": "string",
      "description": "Path to the created Spring Boot project"
    },
    {
      "name": "buildFile",
      "type": "string",
      "description": "Path to Maven pom.xml or Gradle build.gradle"
    },
    {
      "name": "entities",
      "type": "array",
      "description": "JPA entities and their configurations"
    },
    {
      "name": "repositories",
      "type": "array",
      "description": "Spring Data repositories"
    },
    {
      "name": "controllers",
      "type": "array",
      "description": "REST controllers and API endpoints"
    },
    {
      "name": "configuration",
      "type": "object",
      "description": "Application properties and configuration"
    }
  ],
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/stop.sh --node-id $NODE_ID --status $STATUS --output-type setup"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/track-changes.sh --node-id $NODE_ID --tool $TOOL_NAME --category setup"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "$CLAUDE_PROJECT_DIR/hooks/monitor-install.sh --node-id $NODE_ID --category setup"
          }
        ]
      }
    ]
  },
  "resources": {
    "estimatedTime": 20,
    "estimatedTokens": 70000,
    "requiresGPU": false,
    "maxRetries": 3,
    "memory": "4GB",
    "cpu": "2 cores"
  },
  "dependencies": [],
  "tags": ["spring-boot", "java", "jpa", "rest", "security", "maven", "enterprise", "backend", "setup", "api"]
}